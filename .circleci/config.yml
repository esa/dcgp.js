version: 2
jobs:

  install-and-build:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout

      - run:
          name: "Pulling submodules"
          command: |
            git submodule init
            git submodule update --remote

      - run:
          name: Store emsdk commit hash
          command: |
            cd emsdk
            git rev-parse HEAD > ../.circleci/emsdk.hash

      - restore_cache:
          name: Restoring emsdk install from cache
          keys:
          - v1-emsdk-{{ checksum ".circleci/emsdk.hash" }}
          - v1-emsdk-

      - restore_cache:
          name: Restoring NPM packages from cache
          keys:
          - v1-npm-{{ checksum "package.json" }}
          - v1-npm-

      - run:
          name: Install Emscripten
          command: emsdk/emsdk install latest

      - run:
          name: Install packages
          command: npm install

      - save_cache:
          name: Saving emsdk install to cache
          paths:
            - emsdk/clang
            - emsdk/emscripten
            - emsdk/node
          key: v1-emsdk-{{ checksum ".circleci/emsdk.hash" }}

      - save_cache:
          name: Saving NPM packages to cache
          paths:
            - node_modules
          key: v1-npm-{{ checksum "package.json" }}

      - run:
          name: Activate Emscripten
          command: emsdk/emsdk activate latest

      - run:
          name: Building artifacts
          command: |
            source emsdk/emsdk_env.sh
            npm run build:cpp
            npm run build:js

      - store_artifacts:
          path: lib

      - persist_to_workspace:
          root: ~/repo
          paths:
            - lib
            - dcgp.*
            - node_modules

  checks:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout

      - attach_workspace:
          at: ~/repo

      - run:
          name: Linting code
          command: npm run lint

      - run:
          name: Testing code
          command: npm run test:ci

  publish-npm-package:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout

      - attach_workspace:
          at: ~/repo

      - run:
          name: Authenticating with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/repo/.npmrc

      - run:
          name: Publishing package on NPM
          command: npm publish


  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Installing dependencies
          command: |
            apt-get update -yqq
            apt-get install -yqq jq

      - run:
          name: Publishing Release on GitHub
          command: |
            VERSION=v$(cat package.json | jq -r .version)
            ghr -t ${GITHUB_TOKEN} \
            -u ${CIRCLE_PROJECT_USERNAME} \
            -r ${CIRCLE_PROJECT_REPONAME} \
            -c ${CIRCLE_SHA1} \
            -delete \
            ${VERSION} ./dcgp.wasm


workflows:
  version: 2
  # The main workflow tests PR's and deploys master
  main:
    jobs:
      - install-and-build
      - checks:
          requires:
            - install-and-build
      - publish-npm-package:
          requires:
            - install-and-build
            - checks
          filters:
            branches:
              only: master
      - publish-github-release:
          requires:
            - install-and-build
            - checks
          filters:
            branches:
              only: master
